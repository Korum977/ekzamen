#include <iostream>  // Подключаем библиотеку для ввода/вывода
using namespace std; // Используем стандартное пространство имён

/*
 * Функция для подсчёта нулевых элементов в массиве с использованием ассемблерных вставок
 * Параметры:
 *   arr[] - массив целых чисел
 *   len   - длина массива (количество элементов)
 * Возвращает:
 *   количество элементов массива, равных нулю
 */
int countZeros(int arr[], int len) {
    int count = 0; // Инициализируем переменную для хранения результата

    // Начало ассемблерной вставки
    __asm {
        mov ecx, len; Загружаем длину массива в регистр ECX(счётчик цикла)
        mov esi, arr; Загружаем адрес массива в регистр ESI(источник данных)
        xor eax, eax; Обнуляем регистр EAX(здесь будем накапливать счётчик нулей)

        loop_start:; Метка начала цикла
        cmp DWORD PTR[esi], 0; Сравниваем текущий элемент массива с нулём
        jne skip_count; Если не равен нулю, переходим к метке skip_count
        inc eax; Если равен нулю, увеличиваем счётчик(EAX)

        skip_count:; Метка пропуска инкремента
        add esi, 4; Перемещаем указатель на следующий элемент массива(+4 байта)
        loop loop_start; Уменьшаем ECX и повторяем цикл, если ECX не ноль

        mov count, eax; Сохраняем результат из регистра EAX в переменную count
    }
    // Конец ассемблерной вставки

    return count; // Возвращаем количество нулевых элементов
}

/*
 * Главная функция программы
 */
int main() {
    // Инициализация тестового массива
    int arr[] = { 1, 0, 3, 0, 0, 6, 7, 0, 9 };

    // Вычисление размера массива (количество элементов)
    int size = sizeof(arr) / sizeof(arr[0]);

    // Вывод массива на экран
    cout << "Массив: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    // Подсчёт нулевых элементов с помощью функции countZeros
    int zeroCount = countZeros(arr, size);

    // Вывод результата
    cout << "Количество нулевых элементов: " << zeroCount << endl;

    return 0; // Завершение программы с кодом 0 (успех)
}